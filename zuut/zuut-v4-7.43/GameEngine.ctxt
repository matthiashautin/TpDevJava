#BlueJ class context
comment0.target=GameEngine
comment0.text=\r\n\ Allows\ create\ all\ rooms\ and\ command\ management\ \r\n\r\n\ @author\ Matthias\ Hautin\r\n\ @version\ 08/12/2023\r\n
comment1.params=
comment1.target=GameEngine()
comment10.params=pSecondMot
comment10.target=void\ eat(Command)
comment10.text=\r\n\ G\u00E8re\ la\ commande\ "eat"\ permettant\ au\ joueur\ de\ manger\ un\ objet\ sp\u00E9cifique\r\n\ @param\ pSecondMot\ Commande\ contenant\ le\ deuxi\u00E8me\ mot\ saisi\ par\ le\ joueur\r\n
comment11.params=
comment11.target=void\ endGame()
comment11.text=\r\n\ print\ "Thank\ you\ for\ playing.\ \ Good\ bye."\ if\ you\ print\ "quit"\ or\ click\ on\ the\ "quit"\ button\ \r\n\ this\ command\ allows\ you\ to\ quit\ and\ close\ the\ frame\r\n
comment12.params=
comment12.target=void\ toggleAudio()
comment12.text=\r\n\ Active\ ou\ d\u00E9sactive\ l'audio\ du\ jeu.\ Si\ l'audio\ est\ activ\u00E9,\ le\ son\ de\ la\ pi\u00E8ce\ actuelle\ est\ jou\u00E9,\r\n\ sinon,\ le\ son\ est\ arr\u00EAt\u00E9.\ La\ m\u00E9thode\ met\ \u00E0\ jour\ l'\u00E9tat\ de\ l'audio\ et\ effectue\ les\ actions\ n\u00E9cessaires\r\n
comment13.params=pSecondMot
comment13.target=void\ goback(Command)
comment13.text=\r\n\ Cette\ m\u00E9thode\ permet\ \u00E0\ l'utilisateur\ de\ retourner\ \u00E0\ la\ pi\u00E8ce\ pr\u00E9c\u00E9dente\ s'ils\ saisissent\ simplement\ "back"\r\n\ @param\ pSecondMot\ pour\ v\u00E9rifier\ s'il\ y\ a\ un\ deuxi\u00E8me\ mot\r\n
comment14.params=
comment14.target=void\ trapdoor()
comment14.text=\r\n\ Cette\ m\u00E9thode\ permet\ \u00E0\ l'utilisateur\ d'utiliser\ la\ trappe\ si\ la\ pi\u00E8ce\ actuelle\ en\ a\ une\r\n
comment15.params=pFileName
comment15.target=void\ test(Command)
comment15.text=\r\n\ test\ permet\ de\ tester\ automatiquement\ le\ jeu.\r\n\ @param\ pFileName\ est\ une\ commande\ taper\ par\ le\ joueur.\r\n
comment16.params=pCommand
comment16.target=void\ take(Command)
comment16.text=\ Ex\u00E9cute\ la\ commande\ "take"\ pour\ que\ le\ joueur\ prenne\ un\ item\ de\ la\ pi\u00E8ce\ actuelle\r\n\ Si\ la\ commande\ n'a\ pas\ de\ deuxi\u00E8me\ mot\ (nom\ de\ l'item\ \u00E0\ prendre),\ affiche\ un\ message\r\n\ Sinon,\ v\u00E9rifie\ si\ l'item\ existe\ dans\ la\ pi\u00E8ce\ actuelle,\ s'il\ peut\ \u00EAtre\ pris\ en\ fonction\ du\ poids,\r\n\ et\ ajoute\ l'objet\ \u00E0\ l'inventaire\ du\ joueur\ tout\ en\ le\ retirant\ de\ la\ pi\u00E8ce\r\n\ @param\ pCommand\ L'Item\ Command\ repr\u00E9sentant\ la\ commande\ utilisateur\r\n
comment17.params=pCommand
comment17.target=void\ drop(Command)
comment17.text=\r\n\ Ex\u00E9cute\ la\ commande\ "drop"\ pour\ que\ le\ joueur\ pose\ un\ Item\ de\ son\ inventaire\ dans\ la\ pi\u00E8ce\ actuelle\r\n\ Si\ la\ commande\ n'a\ pas\ de\ deuxi\u00E8me\ mot\ (nom\ de\ l'item\ \u00E0\ poser),\ affiche\ un\ message\r\n\ Sinon,\ v\u00E9rifie\ si\ l'item\ existe\ dans\ l'inventaire\ du\ joueur,\ le\ retire\ de\ l'inventaire,\r\n\ et\ le\ place\ dans\ la\ pi\u00E8ce\ actuelle\r\n\ @param\ pCommand\ L'objet\ Command\ repr\u00E9sentant\ la\ commande\ utilisateur\r\n
comment18.params=
comment18.target=void\ printPlayer()
comment18.text=\r\n\ Affiche\ les\ informations\ du\ joueur,\ y\ compris\ son\ nom,\ sa\ vie,\ son\ poids\ maximal\ possible,\r\n\ et\ la\ liste\ des\ objets\ dans\ son\ inventaire.\r\n
comment19.params=
comment19.target=void\ checkTimeLimit()
comment19.text=\r\n\ V\u00E9rifie\ si\ le\ joueur\ a\ d\u00E9pass\u00E9\ le\ nombre\ maximal\ de\ mouvements.\r\n\ Si\ oui,\ met\ fin\ au\ jeu.\r\n
comment2.params=pUserInterface
comment2.target=void\ setGUI(UserInterface)
comment2.text=\r\n\ D\u00E9finit\ l'interface\ utilisateur\ du\ jeu.\ La\ m\u00E9thode\ initialise\ l'interface\ utilisateur\r\n\ et\ affiche\ le\ message\ de\ bienvenue.\r\n\ @param\ pUserInterface\ L'interface\ utilisateur\ \u00E0\ d\u00E9finir.\r\n
comment20.params=pCommand
comment20.target=void\ repareMotor(Command)
comment20.text=\r\n\ Cette\ m\u00E9thode\ permet\ au\ joueur\ de\ r\u00E9parer\ un\ moteur\ sp\u00E9cifique\ dans\ la\ pi\u00E8ce\ actuelle\r\n\ @param\ pCommand\ la\ commande\ utilisateur\r\n
comment21.params=
comment21.target=boolean\ verifRepare()
comment21.text=\r\n\ V\u00E9rifie\ l'\u00E9tat\ des\ moteurs\ et\ la\ progression\ du\ joueur\ dans\ le\ jeu\r\n\ @return\ true\ si\ le\ joueur\ a\ r\u00E9ussi\ \u00E0\ r\u00E9parer\ les\ moteurs\ et\ a\ vaincu\ tous\ les\ ennemis,\ false\ sinon\r\n
comment22.params=pCommand
comment22.target=void\ attack(Command)
comment22.text=\r\n\ Cette\ m\u00E9thode\ permet\ au\ joueur\ d'attaquer\ le\ Png\ pr\u00E9sent\ dans\ la\ pi\u00E8ce\ actuelle\ avec\ une\ arme\ sp\u00E9cifi\u00E9e.\r\n\ @param\ pCommand\ la\ commande\ utilisateur\r\n
comment23.params=
comment23.target=boolean\ verifAttack()
comment23.text=\r\n\ V\u00E9rifie\ l'\u00E9tat\ des\ ennemis\ dans\ le\ jeu\ et\ informe\ le\ joueur\ sur\ les\ ennemis\ restants\ \u00E0\ vaincre.\r\n\ @return\ true\ si\ tous\ les\ ennemis\ ont\ \u00E9t\u00E9\ vaincus,\ false\ sinon.\r\n
comment3.params=
comment3.target=void\ createRoomsAndPlayers()
comment3.text=\r\n\ create\ all\ rooms\ for\ the\ game\ with\ calling\ class\ Room\ and\ create\ the\ all\ directions\ for\ each\ rooms\r\n
comment4.params=pCommand
comment4.target=void\ goRoom(Command)
comment4.text=\r\n\ allows\ you\ to\ change\ room\ if\ this\ room\ exist\ c_a_d\ if\ the\ direction\ of\ the\ next\ room\ is\ not\ equal\ to\ null\r\n\ @param\ pCommand\ type\ Command\ allows\ the\ player\ to\ retrieve\ the\ print\ command\r\n
comment5.params=
comment5.target=void\ printWelcome()
comment5.text=\r\n\ printWelcome\ to\ print\ information\ for\ start\ game\r\n\ call\ printLocationInfo()\ to\ get\ the\ description\ of\ the\ first\ aCurrentRooms\ now\ (vMainPilot)\r\n
comment6.params=
comment6.target=void\ printHelp()
comment6.text=\r\n\ printHelp\ to\ print\ if\ you\ write\ "help"\r\n\ call\ showCommands()\ for\ give\ you\ all\ possible\ commmands\r\n
comment7.params=pAppelBonneMethod
comment7.target=void\ interpretCommand(java.lang.String)
comment7.text=\r\n\ analyse\ entered\ command\ and\ determines\ what\ action\ must\ be\ taken\ based\ on\ this\ commad\ and\ manages\ the\ different\ actions\r\n\ @param\ pAppelBonneMethod\ type\ Command\ represent\ the\ command\ entered\ by\ the\ player\r\n
comment8.params=
comment8.target=void\ printLocationInfo()
comment8.text=\r\n\ give\:\ the\ current\ room\ in\ which\ the\ user\ is\ located,\ the\ room\ description,\ its\ different\ exits\r\n\ it\ was\ created\ to\ aviod\ code\ duplication\ between\ printWelcome()\ and\ goRoom()\r\n
comment9.params=pSecondMot
comment9.target=void\ look(Command)
comment9.text=\r\n\ print\ "I\ don't\ know\ how\ to\ look\ at\ something\ in\ particular\ yet."\ if\ there\ have\ a\ second\ word\ after\ look\r\n\ else\ give\:\ the\ current\ room\ in\ which\ the\ user\ is\ located,\ the\ room\ description,\ its\ different\ exits\r\n
numComments=24
