#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ player\ permet\ la\ cr\u00E9ation\ de\ nouveaux\ joueur\ et\ aussi\ d'ennemi\r\n\r\n\ @author\ Matthias\ Hautin\r\n\ @version\ 11/12/2023\r\n
comment1.params=pNamePlayer\ pCurrentRoom\ pPoidsMax\ pVie
comment1.target=Player(java.lang.String,\ Room,\ int,\ int)
comment1.text=\r\n\ initialize\ all\ attribute\r\n\ @param\ pNamePlayer\ (String)\r\n\ @param\ pCurrentRoom\ (Room)\r\n\ @param\ pPoidsMax\ (int)\r\n\ @param\ pVie\ (int)\r\n
comment10.params=pItemtotal
comment10.target=boolean\ getTotalWeight(Item)
comment10.text=\r\n\ Calculer\ le\ poids\ total\ des\ objets\ dans\ l'inventaire\ du\ joueur\r\n\ @return\ Poids\ total\ des\ objets\ dans\ l'inventaire\r\n
comment11.params=pVie
comment11.target=void\ donneVie(int)
comment11.text=\r\n\ Ajoute\ la\ quantit\u00E9\ sp\u00E9cifi\u00E9e\ de\ points\ de\ vie\ au\ joueur\r\n\ @param\ pVie\ La\ quantit\u00E9\ de\ points\ de\ vie\ \u00E0\ ajouter\r\n
comment12.params=pCurrentRoom
comment12.target=void\ setCurrentRoom(Room)
comment12.text=\r\n\ D\u00E9finit\ la\ pi\u00E8ce\ actuelle\ du\ joueur\r\n\ @param\ pCurrentRoom\ La\ nouvelle\ pi\u00E8ce\ actuelle\ du\ joueur\r\n
comment13.params=pItemName\ pItem
comment13.target=void\ takeItem(java.lang.String,\ Item)
comment13.text=\r\n\ Prend\ un\ objet\ de\ la\ pi\u00E8ce\ actuelle\ et\ l'ajoute\ \u00E0\ l'inventaire\ du\ joueur\r\n\ R\u00E9duit\ le\ poids\ maximal\ du\ joueur\ en\ fonction\ du\ poids\ de\ l'objet\ pris\r\n\ @param\ pItemName\ Nom\ de\ l'objet\ \u00E0\ prendre\r\n\ @param\ pItem\ Objet\ \u00E0\ prendre\r\n
comment14.params=pItemName\ pItem
comment14.target=void\ dropItem(java.lang.String,\ Item)
comment14.text=\r\n\ Pose\ un\ objet\ de\ l'inventaire\ du\ joueur\ dans\ la\ pi\u00E8ce\ actuelle\r\n\ Retire\ l'objet\ de\ l'inventaire\ du\ joueur\ et\ ajuste\ le\ poids\ maximal\ en\ cons\u00E9quence\r\n\ @param\ pItemName\ Nom\ de\ l'objet\ \u00E0\ poser\r\n\ @param\ pItem\ Objet\ \u00E0\ poser\r\n
comment2.params=
comment2.target=java.lang.String\ getNamePlayer()
comment2.text=\ \r\n\ \ @return\ this.aNamePlayer\r\n
comment3.params=
comment3.target=Room\ getCurrentRoom()
comment3.text=\ \r\n\ \ @return\ this.aCurrentRoom\r\n
comment4.params=
comment4.target=int\ getPoidsMax()
comment4.text=\ \r\n\ \ @return\ this.aPoidsMax\r\n
comment5.params=
comment5.target=int\ getVie()
comment5.text=\r\n\ \ @return\ this.aVie\r\n
comment6.params=
comment6.target=java.lang.String\ getInventoryItemList()
comment6.text=\r\n\ Renvoie\ tous\ les\ objets\ dans\ l'inventaire\ du\ joueur\ avec\ le\ poid\ associ\u00E9\r\n\ Utilise\ la\ m\u00E9thode\ getItemString\ de\ la\ classe\ ItemList\ pour\ obtenir\ les\ Items\ de\ l'inventaire\ \r\n\ @return\ Une\ cha\u00EEne\ de\ caract\u00E8res\ repr\u00E9sentant\ la\ description\ d\u00E9taill\u00E9e\ des\ objets\ dans\ l'inventaire\r\n
comment7.params=pItemName
comment7.target=Item\ getItemInInventory(java.lang.String)
comment7.text=\r\n\ Obtient\ un\ Item\ sp\u00E9cifique\ de\ l'inventaire\ du\ joueur\ en\ fonction\ de\ son\ nom\r\n\ @param\ pItemName\ Le\ nom\ de\ l'item\ \u00E0\ r\u00E9cup\u00E9rer\r\n\ @return\ L'item\ correspondant\ au\ nom\ sp\u00E9cifi\u00E9,\ ou\ null\ s'il\ n'est\ pas\ trouv\u00E9\ dans\ l'inventaire\r\n
comment8.params=
comment8.target=java.util.Stack\ getPreviousRoom()
comment8.text=\r\n\ \ return\ this.aPreviousRoom\r\n
comment9.params=pItem
comment9.target=Item\ getItem(java.lang.String)
comment9.text=\r\n\ Obtient\ un\ Item\ sp\u00E9cifique\ de\ l'inventaire\ en\ fonction\ de\ son\ nom\r\n\ @param\ pItem\ Le\ nom\ de\ l'item\ \u00E0\ r\u00E9cup\u00E9rer\r\n\ @return\ L'item\ correspondant\ au\ nom\ sp\u00E9cifi\u00E9,\ ou\ null\ s'il\ n'est\ pas\ trouv\u00E9\ dans\ l'inventaire\r\n
numComments=15
