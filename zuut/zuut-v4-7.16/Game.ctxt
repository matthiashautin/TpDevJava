#BlueJ class context
comment0.target=Game
comment0.text=\r\n\ Classe\ Game\ -\ le\ moteur\ du\ jeu\ d'aventure\ Zuul.\r\n\r\n\ @author\ Hautin\ Matthias\r\n
comment1.params=
comment1.target=Game()
comment1.text=\r\n\ call\ the\ createRooms()\ procedure\ to\ create\ all\ the\ rooms\ and\ the\ exits\ of\ each\ room\r\n\ call\ play()\ procedure\ to\ start\ the\ game\r\n\ @method\ Game()\r\n
comment10.params=pSecondMot
comment10.target=void\ look(Command)
comment10.text=\r\n\ print\ "I\ don't\ know\ how\ to\ look\ at\ something\ in\ particular\ yet."\ if\ there\ have\ a\ second\ word\ after\ look\r\n\ else\ give\:\ the\ current\ room\ in\ which\ the\ user\ is\ located,\ the\ room\ description,\ its\ different\ exits\r\n\ @method\ procedure\ look()\r\n
comment11.params=pSecondMot
comment11.target=void\ eat(Command)
comment11.text=\r\n\ print\ "Just\ one\ thing\ at\ a\ time."\ if\ there\ have\ a\ second\ word\ after\ eat\r\n\ else\ print\:\ "You\ have\ eaten\ now\ and\ you\ are\ not\ hungry\ any\ more."\r\n\ @method\ procedure\ eat()\r\n
comment2.params=
comment2.target=void\ createRooms()
comment2.text=\r\n\ create\ all\ rooms\ for\ the\ game\ with\ calling\ class\ Room\ and\ create\ the\ all\ directions\ for\ each\ rooms\r\n\ @method\ procedure\ createRooms()\r\n
comment3.params=
comment3.target=void\ play()
comment3.text=\r\n\ call\ printWelcome()\ method\ \r\n\ allows\ you\ to\ analyze\ the\ different\ commands\ entered\ by\ the\ player\r\n\ at\ each\ loop\ then\ the\ getCommand()\ method\ of\ the\ parser\ is\ called\ to\ obtain\ the\ next\ command\ entered\ by\ the\ player\r\n\ Then,\ the\ processCommand()\ method\ is\ called\ with\ the\ command\ obtained\ as\ a\ parameter.\ (example\:\ "go",\ "quit",\ "help")\ and\ performs\ appropriate\ actions.\r\n\ If\ the\ quit\ command\ is\ entered\ then\ the\ game\ ends\ and\ displays\ "Thank\ you\ for\ playing.\ Good\ bye."\r\n\ @method\ play()\r\n\ \r\n
comment4.params=pCommand
comment4.target=void\ goRoom(Command)
comment4.text=\r\n\ allows\ you\ to\ change\ room\ if\ this\ room\ exist\ c_a_d\ if\ the\ direction\ of\ the\ next\ room\ is\ not\ equal\ to\ null\r\n\ @method\ goRoom()\r\n\ @param\ pCommand\ type\ Command\ allows\ the\ player\ to\ retrieve\ the\ print\ command\r\n
comment5.params=
comment5.target=void\ printWelcome()
comment5.text=\r\n\ printWelcome\ to\ print\ information\ for\ start\ game\r\n\ call\ printLocationInfo()\ to\ get\ the\ description\ of\ the\ first\ aCurrentRooms\ now\ (vMainPilot)\r\n\ @method\ printWelcome()\r\n
comment6.params=
comment6.target=void\ printHelp()
comment6.text=\r\n\ printHelp\ to\ print\ if\ you\ write\ "help"\r\n\ call\ showCommands()\ for\ give\ you\ all\ possible\ commmands\r\n\ @method\ printHelp()\r\n
comment7.params=pSecondMot
comment7.target=boolean\ quit(Command)
comment7.text=\r\n\ quit\ return\ true\ if\ you\ write\ "quit"\r\n\ @method\ quit()\r\n\ @param\ pSecondMot\ type\ Command\ check\ secondWord\ and\ if\ there\ is\ a\ second\ word\ print\ "Quit\ what?"\r\n
comment8.params=pAppelBonneMethod
comment8.target=boolean\ processCommand(Command)
comment8.text=\r\n\ analyse\ entered\ command\ and\ determines\ what\ action\ must\ be\ taken\ based\ on\ this\ commad\ and\ manages\ the\ different\ actions\r\n\ @method\ processCommand()\r\n\ @param\ pAppelBonneMethod\ type\ Command\ represent\ the\ command\ entered\ by\ the\ player\r\n\ \r\n
comment9.params=
comment9.target=void\ printLocationInfo()
comment9.text=\r\n\ give\:\ the\ current\ room\ in\ which\ the\ user\ is\ located,\ the\ room\ description,\ its\ different\ exits\r\n\ it\ was\ created\ to\ aviod\ code\ duplication\ between\ printWelcome()\ and\ goRoom()\r\n\ @method\ procedure\ printLactionInfo()\r\n
numComments=12
